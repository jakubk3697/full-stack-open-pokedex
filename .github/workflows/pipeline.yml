name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Start the application
        run: npm start & npx wait-on http://localhost:8080
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  check_commit_messages:
    needs: [tests]
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    outputs:
      skip_deployment: ${{ steps.check_commits.outputs.skip_deployment }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for #skip in commit messages
        id: check_commits
        run: |
          COMMITS=$(git log ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --pretty=format:"%s")
          if echo "$COMMITS" | grep -q "#skip"; then
            echo "skip_deployment=true" >> $GITHUB_OUTPUT
          else
            echo "skip_deployment=false" >> $GITHUB_OUTPUT
          fi

  simple_deployment_pipeline:
    needs: [check_commit_messages]
    if: github.event.pull_request.merged == true && needs.check_commit_messages.outputs.skip_deployment != 'true'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Run eslint
        run: npm run eslint
      - name: Run tests
        run: npm run test
      - name: Build
        run: npm run build

  version:
    needs: [simple_deployment_pipeline, check_commit_messages]
    if: github.event.pull_request.merged == true && needs.check_commit_messages.outputs.skip_deployment != 'true'
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: [version]
    if: github.event.pull_request.merged == true && needs.check_commit_messages.outputs.skip_deployment != 'true'
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
